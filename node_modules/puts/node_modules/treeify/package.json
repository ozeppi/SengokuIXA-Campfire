{
  "name": "treeify",
  "version": "0.2.0",
  "author": {
    "name": "Luke Plaster",
    "email": "notatestuser@gmail.com"
  },
  "description": "converts a JS object into a nice, visible tree structure for the console",
  "scripts": {
    "test": "./node_modules/vows/bin/vows --spec --isolate"
  },
  "main": "./treeify",
  "repository": {
    "type": "git",
    "url": "https://github.com/notatestuser/node-treeify.git"
  },
  "keywords": [
    "object",
    "tree",
    "print",
    "console",
    "pretty"
  ],
  "devDependencies": {
    "vows": "git://github.com/Filirom1/vows.git#expect"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://lp.mit-license.org/"
    }
  ],
  "engines": {
    "node": ">=0.8"
  },
  "readme": "node-treeify\n============\n\n_treeify_ converts a JS object into a nice, visible depth-indented tree for console printing. The structure \ngenerated is similar to what you get by running the ```tree``` command on Unixy platforms.\n\n```\n{\n    oranges: {                                                  \n        'mandarin': {                                          ├─ oranges\n            clementine: null,                                  │  └─ mandarin\n            tangerine: 'so cheap and juicy!'        -=>        │     ├─ clementine\n        }                                                      │     └─ tangerine: so cheap and juicy!\n    },                                                         └─ apples\n    apples: {                                                     ├─ gala\n        'gala': null,                                             └─ pink lady\n        'pink lady': null\n    }\n}\n```\n\nIt also works well with larger nested hierarchies such as file system directory trees.\nIn fact, the ```fs_tree``` example does a pretty good job of imitating ```tree```. Try it out!\n\nSee the other included examples or the test suite for usage scenarios.\n\nUsage\n-----\n\nFirst you'll want to run this command in your project's root folder:\n```\n$ npm install treeify\n```\n\nThen proceed to use it in your project:\n```js\nvar treeify = require('treeify');\nconsole.log(\n   treeify.asTree({\n      apples: 'gala',      //  ├─ apples: gala\n      oranges: 'mandarin'  //  └─ oranges: mandarin\n   }, true)\n);\n```\n\nRunning the tests\n-----------------\n\nThere's a pretty extensive suite of Vows tests included.\n\n```\n$ npm test\n```\n",
  "readmeFilename": "README.md",
  "_id": "treeify@0.2.0",
  "dist": {
    "shasum": "3a244d8b33b0635c044677f2dcfcc002494ec7aa"
  },
  "_resolved": "git://github.com/darvin/node-treeify.git#baea3e1730a1651a397837ffe99b5d604dfc18d8",
  "_from": "treefy@git://github.com/darvin/node-treeify.git"
}
